/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatetest"]("ajaxcalls",{

/***/ "./assets/js/ajaxcalls.js":
/*!********************************!*\
  !*** ./assets/js/ajaxcalls.js ***!
  \********************************/
/***/ ((module) => {

eval("var _document$getElementB;\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2); } }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nvar Recipes = document.querySelector(\"#Recipes\");\nvar Users = document.querySelector(\"#Users\");\nvar RecipesMobile = document.querySelector(\"#RecipesMobile\");\nvar UsersMobile = document.querySelector(\"#UsersMobile\");\nvar SearchBox = document.querySelector(\"#search_text_input\");\nvar searchOptionSelected;\nvar allResults;\nif (Users.checked) {\n  searchOptionSelected = \"Users\";\n} else if (Recipes.checked) {\n  searchOptionSelected = \"Recipes\";\n} else if (UsersMobile.checked) {\n  searchOptionSelected = \"Users\";\n} else {\n  searchOptionSelected = \"Recipes\";\n}\nRecipes.addEventListener(\"click\", function (e) {\n  searchOptionSelected = e.target.value;\n});\nUsers.addEventListener(\"click\", function (e) {\n  searchOptionSelected = e.target.value;\n});\nRecipesMobile.addEventListener(\"click\", function (e) {\n  searchOptionSelected = e.target.value;\n});\nUsersMobile.addEventListener(\"click\", function (e) {\n  searchOptionSelected = e.target.value;\n});\n(_document$getElementB = document.getElementById(\"submit_profile_post\")) === null || _document$getElementB === void 0 || _document$getElementB.addEventListener(\"click\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(e) {\n    var form, formData, response, data, _t;\n    return _regenerator().w(function (_context) {\n      while (1) switch (_context.n) {\n        case 0:\n          e.preventDefault();\n          form = document.querySelector(\"form.profile_post\");\n          formData = new FormData(form);\n          _context.p = 1;\n          _context.n = 2;\n          return fetch(\"includes/handlers/ajax_submit_profile_post.php\", {\n            method: \"POST\",\n            body: formData\n          });\n        case 2:\n          response = _context.v;\n          _context.n = 3;\n          return response.json();\n        case 3:\n          data = _context.v;\n          if (data.status === \"success\") {\n            document.getElementById(\"post_form\").style.display = \"none\";\n            location.reload();\n          } else {\n            alert(data.message || \"Error submitting post\");\n          }\n          _context.n = 5;\n          break;\n        case 4:\n          _context.p = 4;\n          _t = _context.v;\n          console.error(\"Error:\", _t);\n          alert(\"Error submitting post\");\n        case 5:\n          return _context.a(2);\n      }\n    }, _callee, null, [[1, 4]]);\n  }));\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\n$(document).ready(function () {\n  $(\".button_holder\").on(\"click\", function () {\n    document.search_form.submit();\n  });\n});\n\n/*\n  When you click away from the elements below\n  the results will get removed\n*/\n// $(document).click(function(e){\n\n//   if(e.target.class != \"searchResultsbox\" && e.target.id != \"searchBox\") {\n\n//     $('.searchBox').val(\"\");\n//     $(\".searchResultsbox\").html(\"\");\n//     $('.search_results_footer').html(\"\");\n//     $('.search_results_footer').toggleClass(\"search_results_footer_empty\");\n//     $('.search_results_footer').toggleClass(\"search_results_footer\");\n//   }\n\n//   if(e.target.className != \"dropdown_data_window\") {\n\n//     $(\".dropdown_data_window\").html(\"\");\n//     $(\".dropdown_data_window\").css({\"padding\" : \"0px\", \"height\" : \"0px\"});\n//   }\n\n//   if ($('.searchBox').val(\"\")) {\n//     $(\".searchResultsbox\").css({\"padding\" : \"0px\"});\n\n//   }\n\n// });\nfunction updateLike(_x2, _x3) {\n  return _updateLike.apply(this, arguments);\n}\nfunction _updateLike() {\n  _updateLike = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(post_id, value) {\n    var response, data, likeButton, likeCount, _t2;\n    return _regenerator().w(function (_context2) {\n      while (1) switch (_context2.n) {\n        case 0:\n          _context2.p = 0;\n          _context2.n = 1;\n          return fetch(\"includes/handlers/ajax_like.php\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              post_id: post_id,\n              value: value\n            })\n          });\n        case 1:\n          response = _context2.v;\n          _context2.n = 2;\n          return response.json();\n        case 2:\n          data = _context2.v;\n          if (data.status === \"success\") {\n            // Update like button and count\n            likeButton = document.querySelector(\"[data-post-id=\\\"\".concat(post_id, \"\\\"] .likeButton\"));\n            likeCount = document.querySelector(\"[data-post-id=\\\"\".concat(post_id, \"\\\"] .likeCount\"));\n            if (likeButton) {\n              likeButton.classList.toggle(\"liked\", value === 1);\n            }\n            if (likeCount && data.data.likes_for_post) {\n              likeCount.textContent = data.data.likes_for_post;\n            }\n          } else {\n            alert(data.message || \"Error updating like\");\n          }\n          _context2.n = 4;\n          break;\n        case 3:\n          _context2.p = 3;\n          _t2 = _context2.v;\n          console.error(\"Error:\", _t2);\n          alert(\"Error updating like\");\n        case 4:\n          return _context2.a(2);\n      }\n    }, _callee2, null, [[0, 3]]);\n  }));\n  return _updateLike.apply(this, arguments);\n}\nfunction getUsers(_x4, _x5) {\n  return _getUsers.apply(this, arguments);\n}\n/*\n  TODO: Follow example from function getDropdownData(user, type) in my previous 2021 version,\n*/\nfunction _getUsers() {\n  _getUsers = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3(value, user) {\n    var response, data, _t3;\n    return _regenerator().w(function (_context3) {\n      while (1) switch (_context3.n) {\n        case 0:\n          _context3.p = 0;\n          _context3.n = 1;\n          return fetch(\"includes/handlers/ajax_friend_search.php\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              query: value,\n              userLoggedIn: user\n            })\n          });\n        case 1:\n          response = _context3.v;\n          _context3.n = 2;\n          return response.json();\n        case 2:\n          data = _context3.v;\n          if (data.status === \"success\") {\n            document.querySelector(\".results\").innerHTML = data.data.html;\n          } else {\n            console.error(data.message);\n          }\n          _context3.n = 4;\n          break;\n        case 3:\n          _context3.p = 3;\n          _t3 = _context3.v;\n          console.error(\"Error:\", _t3);\n        case 4:\n          return _context3.a(2);\n      }\n    }, _callee3, null, [[0, 3]]);\n  }));\n  return _getUsers.apply(this, arguments);\n}\nfunction getDropdownData(_x6, _x7) {\n  return _getDropdownData.apply(this, arguments);\n}\nfunction _getDropdownData() {\n  _getDropdownData = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4(user, type) {\n    var pageName, response, data, friendsReqsDesktop, friendsReqsHTML, _t4;\n    return _regenerator().w(function (_context4) {\n      while (1) switch (_context4.n) {\n        case 0:\n          if (type === \"notification\") {\n            pageName = \"ajax_load_notifications.php\";\n          } else if (type === \"message\") {\n            pageName = \"ajax_load_messages.php\";\n          } else if (type === \"friendReqs\") {\n            pageName = \"ajax_load_friendReqs.php\";\n          }\n          _context4.p = 1;\n          _context4.n = 2;\n          return fetch(\"includes/handlers/\" + pageName, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              user: user,\n              type: type\n            })\n          });\n        case 2:\n          response = _context4.v;\n          _context4.n = 3;\n          return response.json();\n        case 3:\n          data = _context4.v;\n          if (data.status === \"success\") {\n            if (pageName === \"ajax_load_friendReqs.php\") {\n              friendsReqsDesktop = document.querySelector(\".friendsRequestsDesktop .content .entries .simplebar-content\");\n              friendsReqsHTML = data.data;\n              if (friendsReqsHTML && friendsReqsHTML.length > 0) {\n                friendsReqsHTML.forEach(function (req) {\n                  /*html*/\n                  var html = \"\\n            <div class=\\\"entry\\\">\\n              <img src=\\\"\".concat(req.user_pic, \"\\\">\\n              <h4>\").concat(req.user_from_fullname, \"</h4>\\n            </div>\\n            \");\n                  friendsReqsDesktop.innerHTML += html;\n                });\n              }\n            }\n          }\n\n          // if (data.status === \"success\") {\n          //   const dropdownElement = document.querySelector(\".dropdown_data_window\");\n          //   if (dropdownElement) {\n          //     // Clear previous content\n          //     dropdownElement.innerHTML = \"\";\n          //     dropdownElement.style.padding = \"0px\";\n          //     dropdownElement.style.height = \"280px\";\n\n          //     // Check if there are notifications\n          //     if (data.data && data.data.has_notifications) {\n          //       // Render each notification\n          //       const notifications = data.data.notifications;\n\n          //       notifications.forEach(notification => {\n          //         // Create notification HTML\n          //         const notificationElement = document.createElement(\"a\");\n          //         notificationElement.className = \"entry\";\n          //         notificationElement.href = notification.link;\n\n          //         // Style for new notifications\n          //         const bgColor = notification.is_new ? \"#DDEDFF\" : \"\";\n\n          //         /*html*/\n          //         notificationElement.innerHTML = `\n          //           <div class=\"resultDisplay resultDisplayNotification\" style=\"background-color: ${bgColor}\">\n          //             <div class=\"notificationsProfilePic\">\n          //               <img src=\"${notification.profile_pic}\">\n          //             </div>\n          //             <h4 class=\"heading-4\">${notification.time_message}</h4>\n          //             <h3 class=\"heading-3\">${notification.message} :</h3>\n          //             <h3 class=\"heading-3 postHeader\">${notification.heading}</h3>\n          //           </div>\n          //         `;\n\n          //         dropdownElement.appendChild(notificationElement);\n          //       });\n\n          //       // Add pagination if needed\n          //       if (data.data.pagination.has_more) {\n          //         const nextPage = data.data.pagination.next_page;\n          //         dropdownElement.innerHTML += `<input type='hidden' class='nextPageDropdownData' value='${nextPage}'><input type='hidden' class='noMoreDropdownData' value='false'>`;\n          //       } else {\n          //         dropdownElement.innerHTML += `<input type='hidden' class='noMoreDropdownData' value='true'><p style='text-align: center; width: 100%;'>No more notifications to load!</p>`;\n          //       }\n          //     } else {\n          //       // No notifications\n          //       dropdownElement.innerHTML = \"<p style='text-align: center; padding: 10px;'>You have no notifications!</p>\";\n          //     }\n          //   }\n          // }\n          _context4.n = 5;\n          break;\n        case 4:\n          _context4.p = 4;\n          _t4 = _context4.v;\n          console.error(\"Error:\", _t4);\n        case 5:\n          return _context4.a(2);\n      }\n    }, _callee4, null, [[1, 4]]);\n  }));\n  return _getDropdownData.apply(this, arguments);\n}\nfunction getLiveSearchUsers(_x8, _x9) {\n  return _getLiveSearchUsers.apply(this, arguments);\n} // async function getLiveSearchUsersMobile(value, user) {\n//   /*\n//       Post ajax call  when we access the ( includes/handlers/ajax_search.php ) page\n//       we will use the parameters {query:value, userLoggedIn: user}\n//       whatever is returned will be used in (data)\n//       q == the query string we are passing\n//   */\n//      if (searchOptionSelected == \"Users\") {\n//        var option = \"includes/handlers/ajax_search_mobile.php\";\n//        allResults = \"searchallusers\";\n//      } else {\n//        var option = \"includes/handlers/ajax_search_recipes_mobile.php\";\n//        allResults = \"searchallposts\";\n//      }\n//   try {\n//     const response = await fetch(option, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({\n//         query: value,\n//         userLoggedIn: user\n//       })\n//     });\n//     const data = await response.json();\n//     if (data.status === 'success') {\n//       if($(\".search_results_footer_empty\")[0]) {\n//         $(\".search_results_footer_empty\").toggleClass(\"search_results_footer\");\n//         $(\".search_results_footer_empty\").toggleClass(\"search_results_footer_empty\");\n//       }\n//       $('.searchResultsbox').html(data.data.html);\n//       $('.search_results_footer').html(\" <a class='heading-3' href='\" + allResults + \".php?q=\" + value + \"'>See All Results</a>\");\n//       $('.searchResultsbox').css({\"paddingBottom\": \"20%\"})\n//     } else {\n//       $('.search_results_footer').html(\"\");\n//       $('.search_results_footer').toggleClass(\"search_results_footer_empty\");\n//       $('.search_results_footer').toggleClass(\"search_results_footer\");\n//       $('.searchResultsbox').html(\"\");\n//       $('.searchResultsbox').css({\"padding\": \"0px\"})\n//     }\n//   } catch (error) {\n//     console.error('Error:', error);\n//   }\n// }\n// Enable Hot Module Replacement\nfunction _getLiveSearchUsers() {\n  _getLiveSearchUsers = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5(value, user) {\n    var searchResultsBox, searchResultsFooter, option, response, data, htmlContent, totalResults, _htmlContent, _t5;\n    return _regenerator().w(function (_context5) {\n      while (1) switch (_context5.n) {\n        case 0:\n          // Get DOM elements once instead of querying multiple times\n          searchResultsBox = document.querySelector(\".searchResultsbox\");\n          searchResultsFooter = document.querySelector(\".search_results_footer\");\n          /*\n              Post ajax call for when we access the search handlers\n              we will use the parameters {query:value, userLoggedIn: user}\n              The handlers now return JSON data instead of HTML\n          */\n          if (!(SearchBox.value.length < 1)) {\n            _context5.n = 1;\n            break;\n          }\n          searchResultsBox.innerHTML = \"\";\n          searchResultsBox.style.padding = \"0px\";\n          searchResultsFooter.innerHTML = \"\";\n          searchResultsFooter.style.padding = \"0px\";\n          return _context5.a(2);\n        case 1:\n          if (searchOptionSelected == \"Users\") {\n            option = \"includes/handlers/ajax_search.php\";\n            allResults = \"searchallusers\";\n          } else {\n            option = \"includes/handlers/ajax_search_recipes.php\";\n            allResults = \"searchallposts\";\n          }\n          _context5.p = 2;\n          _context5.n = 3;\n          return fetch(option, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              query: value,\n              userLoggedIn: user\n            })\n          });\n        case 3:\n          response = _context5.v;\n          _context5.n = 4;\n          return response.json();\n        case 4:\n          data = _context5.v;\n          if (data.status === \"success\") {\n            if (searchResultsBox) {\n              searchResultsBox.innerHTML = \"\";\n              searchResultsBox.style.padding = \"0px\";\n            }\n            htmlContent = \"\";\n            totalResults = \"\";\n            if (data.data.type === \"users\") {\n              // Generate HTML for users\n              htmlContent = data.data.users;\n              if (htmlContent && htmlContent.length > 0) {\n                htmlContent.forEach(function (user) {\n                  /*html*/\n                  var html = \"\\n              <a href='\".concat(user.url, \"' class='users-entry'>\\n                <div class='avatar'>\\n                  <img src='\").concat(user.profile_pic, \"'>\\n                </div>\\n\\n                <div class='userInfo'>\\n                  <h3 class='heading-3 name'>\\n                    \").concat(user.first_name, \" \").concat(user.last_name, \"\\n                  </h3>\\n                  <h4 class='heading-4 username'>\\n                    \").concat(user.username, \"\\n                  </h4>\\n\\n                  <span class='common'>\\n                    \").concat(user.mutual_friends, \"\\n                  </span>\\n                </div>\\n\\n                <div class='block'></div>\\n              </a>\\n            \");\n                  searchResultsBox.innerHTML += html;\n                  searchResultsBox.style.paddingBottom = \"20%\";\n                });\n              }\n              totalResults = data.data.users.length;\n            } else if (data.data.type === \"recipes\") {\n              _htmlContent = data.data.recipes;\n              if (_htmlContent && _htmlContent.length > 0) {\n                _htmlContent.forEach(function (recipe) {\n                  /*html*/\n                  var html = \"\\n              <a href='\".concat(recipe.url, \"' class='posts-entry'>\\n                <div class='post-pic'>\\n                  <img src='\").concat(recipe.image, \"'>\\n                </div>\\n\\n                <div class='post-info'>\\n                  <h3 class='heading-3 headline'>\\n                    \").concat(recipe.heading, \"\\n                  </h3>\\n\\n                  <div class='userInfo'>\\n                    <div class='avatar'>\\n                      <img src='\").concat(recipe.author.profile_pic, \"'>\\n                    </div>\\n\\n                    <div class='author'>\\n                      <h3 class='heading-3 name'>\\n                        By: \").concat(recipe.author.first_name, \" \").concat(recipe.author.last_name, \"\\n                      </h3>\\n\\n                      <h3 class='heading-4 username'>\\n                        @\").concat(recipe.author.username, \"\\n                      </h3>\\n                    </div>\\n                  </div>\\n                \\n\\n                \\n                </div>\\n\\n                <div class='block'></div>\\n              </a>\\n            \");\n                  searchResultsBox.innerHTML += html;\n                  searchResultsBox.style.paddingBottom = \"20%\";\n                });\n              }\n              totalResults = data.data.recipes.length;\n            }\n            if (totalResults > 0) {\n              /*html*/\n              searchResultsFooter.innerHTML = \"\\n          <a class='heading-3' href='allResults.php?q=\".concat(value, \"'>\\n            See All \").concat(totalResults, \" Results \\n          </a>\\n        \");\n            }\n          } else {\n            if (searchResultsBox) {\n              searchResultsBox.innerHTML = \"\";\n\n              /*html*/\n              searchResultsFooter.innerHTML = \"\\n        <a class='heading-3'>\\n          No Results Found\\n        </a>\\n      \";\n            }\n          }\n          _context5.n = 6;\n          break;\n        case 5:\n          _context5.p = 5;\n          _t5 = _context5.v;\n          console.error(\"Error:\", _t5);\n        case 6:\n          return _context5.a(2);\n      }\n    }, _callee5, null, [[2, 5]]);\n  }));\n  return _getLiveSearchUsers.apply(this, arguments);\n}\nif (true) {\n  module.hot.accept();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/ajaxcalls.js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("3b53b66617c23f29d718")
/******/ })();
/******/ 
/******/ }
);
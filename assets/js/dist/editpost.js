/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/js/pages/EditPost.js":
/*!*************************************!*\
  !*** ./assets/js/pages/EditPost.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"editpost\": () => (/* binding */ editpost)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar EditPost = /*#__PURE__*/function () {\n  function EditPost() {\n    _classCallCheck(this, EditPost);\n\n    this.events();\n    this.inpFile = document.getElementById(\"inpFile\");\n  }\n\n  _createClass(EditPost, [{\n    key: \"events\",\n    value: function events() {\n      this.addPostHeaderImg();\n      this.summerNoteInit();\n      this.updatePost(); // document.addEventListener(\"DOMContentLoaded\", (event) => {\n      //   console.log('====================================');\n      //   console.log('yeah man damn');\n      //   console.log('====================================');\n      //   this.inpFile.addEventListener(\"DOMContentLoaded\", () => {\n      //     file = this.files[0];\n      //     console.log(\"==================file==================\");\n      //     console.log(file);\n      //     console.log(\"====================================\");\n      //   });\n      // });\n    }\n  }, {\n    key: \"addPostHeaderImg\",\n    value: function addPostHeaderImg() {\n      var file;\n      var inpFile = document.getElementById(\"inpFile\");\n      var previewContainer = document.getElementById(\"imgPreview\");\n      var previewImage = document.querySelector(\".img-preview-image\");\n      var previewDefaultText = document.querySelector(\".imgPreview-DefaultTxt\");\n      var inpFilepic = document.getElementById(\"inpFile\").files;\n      var prevPhoto = previewImage.getAttribute(\"src\");\n\n      if (previewImage.getAttribute(\"src\") == \"\") {\n        previewImage.setAttribute(\"src\", null);\n      } else {\n        previewImage.style.display = \"block\";\n        previewDefaultText.style.display = \"none\";\n      }\n\n      inpFile.addEventListener(\"change\", function () {\n        file = this.files[0];\n\n        if (file) {\n          var reader = new FileReader();\n          console.log(file);\n          previewDefaultText.style.display = \"none\";\n          previewImage.style.display = \"block\";\n          reader.addEventListener(\"load\", function () {\n            previewImage.setAttribute(\"src\", this.result); //  getCroppedImage(\"src\", this.result);\n          });\n          reader.readAsDataURL(file);\n        } else {\n          previewDefaultText.style.display = \"block\";\n          previewImage.style.display = \"none\";\n\n          if (previewImage.getAttribute(\"src\") == \"\") {\n            previewImage.setAttribute(\"src\", null);\n          }\n        }\n      });\n      Array.prototype.forEach.call(document.querySelectorAll(\".file-upload-button\"), function (button) {\n        var hiddenInput = button.parentElement.querySelector(\".inpFile\");\n        var label = button.parentElement.querySelector(\".file-upload-label\");\n\n        if (imagePath !== \"\") {\n          var defaultLabelText = imagePath;\n        } else {\n          var defaultLabelText = \"No file selected\";\n        } // Set default text for label\n\n\n        label.textContent = defaultLabelText;\n        label.title = defaultLabelText;\n        button.addEventListener(\"click\", function () {\n          hiddenInput.click();\n        });\n        hiddenInput.addEventListener(\"change\", function () {\n          var filenameList = Array.prototype.map.call(hiddenInput.files, function (file) {\n            return file.name;\n          });\n          label.textContent = filenameList.join(\", \") || defaultLabelText;\n          label.title = label.textContent;\n        });\n      });\n    }\n  }, {\n    key: \"updatePost\",\n    value: function updatePost() {\n      var updateBtn = document.getElementById(\"updatePost\");\n      var headerImage = document.querySelector(\".file-upload-label\");\n      var inpFile = document.getElementById(\"inpFile\");\n      var uploadRes = document.querySelector(\".uploadRes\");\n      updateBtn.addEventListener(\"click\", function (e) {\n        e.preventDefault();\n        var bodyFormData = new FormData();\n        bodyFormData.append(\"headline\", document.getElementById(\"editpost_Headline\").value);\n        bodyFormData.append(\"body\", document.getElementById(\"summernote\").value);\n        bodyFormData.append(\"userLoggedIn\", userLoggedIn);\n        bodyFormData.append(\"update_post\", \"update_post\");\n        bodyFormData.append(\"post_id\", post_id);\n        bodyFormData.append(\"headerImage\", headerImage.innerHTML);\n        /**\r\n         * Detect whether user changed the header photo\r\n         */\n\n        if (inpFile.files[0]) {\n          bodyFormData.append(\"file\", inpFile.files[0]);\n        }\n\n        axios({\n          method: \"post\",\n          url: \"includes/form_handlers/edit_post_handler.php\",\n          headers: {\n            // \"Content-Type\": \"multipart/form-data\",\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          data: bodyFormData\n        }).then(function (res) {\n          return showMsg(res.data);\n        })[\"catch\"](function (err) {\n          return console.error(err);\n        });\n\n        function showMsg(res) {\n          uploadRes.innerHTML = res;\n          uploadRes.style.display = \"block\";\n          setTimeout(function () {\n            uploadRes.style.opacity = 1;\n            uploadRes.style.visibility = \"visible\";\n          }, 600);\n          setTimeout(function () {\n            uploadRes.style.opacity = 0;\n            uploadRes.style.visibility = \"hidden\";\n          }, 5000);\n          setTimeout(function () {\n            uploadRes.style.display = \"none\";\n          }, 6000);\n        }\n      });\n    }\n  }, {\n    key: \"summerNoteInit\",\n    value: function summerNoteInit() {\n      $(\"#summernote\").summernote({\n        height: 400\n      });\n    }\n  }]);\n\n  return EditPost;\n}();\n\nvar editpost = new EditPost();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/pages/EditPost.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./assets/js/pages/EditPost.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;